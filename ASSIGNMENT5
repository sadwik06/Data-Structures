question.1

#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *previous;
    struct node *next;
};

struct node *head = NULL, *tail = NULL;

int main () {

    printf("Enter size of doubly linked list : ");
    int size;
    scanf("%d", &size);

    for (int a = 1; a <= size; a++) {
        struct node *nnode = (struct node *) malloc (sizeof(struct node));

        if (nnode == NULL) {
            printf("Memory allocation failed!");
            return -1;
        }

        printf("Enter data : ");
        scanf("%d", &nnode->data);

        nnode->previous = NULL;
        nnode->next = NULL;

        if (head == NULL) {
            head = nnode;
            tail = nnode;
        } else {
            tail->next = nnode;
            nnode->previous = tail;
            tail = nnode;
        }
    }

    struct node *temp = head;

    printf("Printing in forward direction-\n");
    while (temp != NULL) {
        printf("%d\n", temp->data);
        temp = temp->next;
    }

    temp = tail;

    printf("Printing in backward direction-\n");
    while (temp != NULL) {
        printf("%d\n", temp->data);
        temp = temp->previous;
    }
    
    return 0;
}


question.2
#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *previous;
    struct node *next;
};

struct node *head = NULL, *tail = NULL, *temp;

int main () {

    printf("Enter size of doubly linked list : ");
    int size;
    scanf("%d", &size);

    for (int a = 1; a <= size; a++) {
        struct node *nnode = (struct node *) malloc (sizeof(struct node));

        if (nnode == NULL) {
            printf("Memory allocation failed!");
            return -1;
        }

        printf("Enter data : ");
        scanf("%d", &nnode->data);

        nnode->previous = NULL;
        nnode->next = NULL;

        if (head == NULL) {
            head = nnode;
            tail = nnode;
        } else {
            tail->next = nnode;
            nnode->previous = tail;
            tail = nnode;
        }
    }

    printf("Insert node at:-\n1. Start\n2. End\n3. At specfic position\n");
    int choice;
    scanf("%d", &choice);

    struct node *nnode = (struct node *) malloc (sizeof(struct node));
    printf("Enter data : ");
    scanf("%d", &nnode->data);
    nnode->previous = NULL;
    nnode->next = NULL;

    if (choice == 1) {
        nnode->next = head;
        head->previous = nnode;
        head = nnode;
    }
    else if (choice == 2) {
        tail->next = nnode;
        nnode->previous = tail;
        tail = nnode;
    }
    else if (choice == 3) {
        int specific_choice;
        printf("Enter the node number : ");
        scanf("%d", &specific_choice);

        temp = head;
        for (int b = 1; b < specific_choice; b++) {
            temp = temp->next;
        }

        nnode->next = temp->next;
        nnode->previous = temp;

        temp->next->previous = nnode;

        temp->next = nnode;
    }

    temp = head;

    while (temp != NULL) {
        printf("%d\n", temp->data);
        temp = temp->next;
    }
    
    return 0;
}

question.3
#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *previous;
    struct node *next;
};

struct node *head = NULL, *tail = NULL;

int main () {

    printf("Enter size of doubly linked list : ");
    int size;
    scanf("%d", &size);

    for (int a = 1; a <= size; a++) {
        struct node *nnode = (struct node *) malloc (sizeof(struct node));

        if (nnode == NULL) {
            printf("Memory allocation failed!");
            return -1;
        }

        printf("Enter data : ");
        scanf("%d", &nnode->data);

        nnode->previous = NULL;
        nnode->next = NULL;

        if (head == NULL) {
            head = nnode;
            tail = nnode;
        } else {
            tail->next = nnode;
            nnode->previous = tail;
            tail = nnode;
        }
    }

    printf("Delete node at:-\n1. Start\n2. End\n3. At specfic position\n");
    int choice;
    scanf("%d", &choice);

    if (choice == 1) {
        struct node *temp2 = head;
        head = head->next;
        head->previous = NULL;
        free(temp2);
    }
    else if (choice == 2) {
        struct node *temp2 = tail;
        tail = tail->previous;
        tail->next = NULL;
        free(temp2);
    }
    else if (choice == 3) {
        int del_choice;
        printf("Enter number of node to delete : ");
        scanf("%d", &del_choice);
        struct node *temp2 = head;
        for (int b = 1; b < del_choice; b++) {
            temp2 = temp2->next;
        }
        temp2->previous->next = temp2->next;
        temp2->next->previous = temp2->previous;
        free(temp2);
    }

    struct node *temp = head;

    while (temp != NULL) {
        printf("%d\n", temp->data);
        temp = temp->next;
    }
    
    return 0;
}

question.4
#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *next;
};

struct node *head = NULL, *temp;

int main () {

    printf("Enter the number of nodes in circular linked list : ");
    int size;
    scanf("%d", &size);

    for (int a = 1; a <= size; a++) {
        struct node *nnode = (struct node *) malloc (sizeof(struct node));

        if (nnode == NULL) {
            printf("Memory allocation failed!");
            return -1;
        }

        printf("Enter data : ");
        scanf("%d", &nnode->data);

        if (head == NULL) {
            head = nnode;
            temp = nnode;
            head->next = head;
        } else {
            nnode->next = temp->next;
            temp->next = nnode;
            temp = temp->next;
        }
    }

    temp = head;

    while (temp->next != head) {
        printf("%d\n", temp->data);
        temp = temp->next;
    }
    printf("%d", temp->data);

    return 0;
}

question.5
#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *next;
};

struct node *head = NULL, *temp;

int main () {

    printf("Enter the number of nodes in circular linked list : ");
    int size;
    scanf("%d", &size);

    for (int a = 1; a <= size; a++) {
        struct node *nnode = (struct node *) malloc (sizeof(struct node));

        if (nnode == NULL) {
            printf("Memory allocation failed!");
            return -1;
        }

        printf("Enter data : ");
        scanf("%d", &nnode->data);

        if (head == NULL) {
            head = nnode;
            temp = nnode;
            head->next = head;
        } else {
            nnode->next = temp->next;
            temp->next = nnode;
            temp = temp->next;
        }
    }

    printf("Enter place of node to insert : ");
    int place;
    scanf("%d", &place);

    temp = head;
    for (int b = 1; b < place - 1; b++) {
        temp = temp->next;
    }
    
    struct node *nnode = (struct node *) malloc (sizeof(struct node));

    if (nnode == NULL) {
        printf("Memory allocation failed!");
        return -1;
    }

    printf("Enter data : ");
    scanf("%d", &nnode->data);

    nnode->next = temp->next;
    temp->next = nnode;
    

    temp = head;

    while (temp->next != head) {
        printf("%d\n", temp->data);
        temp = temp->next;
    }
    printf("%d", temp->data);

    return 0;
}

question.6
#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *next;
};

struct node *head = NULL, *temp;

int main () {

    printf("Enter the number of nodes in circular linked list : ");
    int size;
    scanf("%d", &size);

    for (int a = 1; a <= size; a++) {
        struct node *nnode = (struct node *) malloc (sizeof(struct node));

        if (nnode == NULL) {
            printf("Memory allocation failed!");
            return -1;
        }

        printf("Enter data : ");
        scanf("%d", &nnode->data);

        if (head == NULL) {
            head = nnode;
            temp = nnode;
            head->next = head;
        } else {
            nnode->next = temp->next;
            temp->next = nnode;
            temp = temp->next;
        }
    }

    printf("Enter place of node to delete : ");
    int place;
    scanf("%d", &place);

    temp = head;
    for (int b = 1; b < place - 1; b++) {
        temp = temp->next;
    }

    struct node *temp2 = temp->next;
    
    temp->next = temp->next->next;
    free(temp2);

    temp = head;

    while (temp->next != head) {
        printf("%d\n", temp->data);
        temp = temp->next;
    }
    printf("%d", temp->data);

    return 0;
}

question.7
#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *next;
};

struct node *head, *head1 = NULL, *head2 = NULL, *temp1, *temp2;

int main () {

    printf("Enter the number of nodes in first circular linked list : ");
    int size1;
    scanf("%d", &size1);

    for (int a = 1; a <= size1; a++) {

        struct node *nnode = (struct node *) malloc (sizeof(struct node));
        
        printf("Enter data : ");
        scanf("%d", &nnode->data);

        if (head1 == NULL) {
            head1 = nnode;
            temp1 = nnode;
            nnode->next = nnode;
        } else {
            nnode->next = temp1->next;
            temp1->next = nnode;
            temp1 = temp1->next;
        }

    }

    printf("Enter the number of nodes in second circular linked list : ");
    int size2;
    scanf("%d", &size2);

    for (int a = 1; a <= size2; a++) {

        struct node *nnode = (struct node *) malloc (sizeof(struct node));
        
        printf("Enter data : ");
        scanf("%d", &nnode->data);

        if (head2 == NULL) {
            head2 = nnode;
            temp2 = nnode;
            nnode->next = nnode;
        } else {
            nnode->next = temp2->next;
            temp2->next = nnode;
            temp2 = temp2->next;
        }

    }

    temp1->next = head2;
    temp2->next = head1;

    head = head1;

    temp1 = head;

    while (temp1->next != head) {
        printf("%d", temp1->data);
        temp1 = temp1->next;
    }
    printf("%d\n", temp1->data);

    return 0;
}
